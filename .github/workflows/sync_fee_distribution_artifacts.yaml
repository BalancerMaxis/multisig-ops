name: Sync Fee Distribution Artifacts

on:
  repository_dispatch:
    types: [fee_report_merged]
  workflow_dispatch:
    inputs:
      start-date:
        description: "Start date (YYYY-MM-DD) - leave empty for auto-detection"
        required: false
      end-date:
        description: "End date (YYYY-MM-DD) - leave empty for auto-detection"
        required: false

jobs:
  sync_artifacts:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install dependencies
        run: |
          RUN_DIR=tools/python/fee_distribution_sync
          pip3 install -r $RUN_DIR/requirements.txt

      - name: Check for new fee reports and fetch artifacts
        id: fetch
        run: |
          RUN_DIR=tools/python/fee_distribution_sync
          
          # Determine how to run the script based on the trigger
          if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            # Use dates from repository dispatch payload if available
            if [ -n "${{ github.event.client_payload.start_date }}" ] && [ -n "${{ github.event.client_payload.end_date }}" ]; then
              echo "Using dates from repository dispatch: ${{ github.event.client_payload.start_date }} to ${{ github.event.client_payload.end_date }}"
              python3 $RUN_DIR/fetch_fee_artifacts.py \
                --start-date "${{ github.event.client_payload.start_date }}" \
                --end-date "${{ github.event.client_payload.end_date }}"
            else
              echo "Auto-detecting dates from latest merged PR"
              python3 $RUN_DIR/fetch_fee_artifacts.py --auto
            fi
          elif [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            # Use manual input dates if provided
            if [ -n "${{ github.event.inputs.start-date }}" ] && [ -n "${{ github.event.inputs.end-date }}" ]; then
              echo "Using manually provided dates"
              python3 $RUN_DIR/fetch_fee_artifacts.py \
                --start-date "${{ github.event.inputs.start-date }}" \
                --end-date "${{ github.event.inputs.end-date }}"
            else
              echo "Auto-detecting dates from latest merged PR"
              python3 $RUN_DIR/fetch_fee_artifacts.py --auto
            fi
          fi

      - name: Read fetch summary
        id: summary
        run: |
          if [ -f fetch_summary.json ]; then
            END_DATE=$(python3 -c "import json; print(json.load(open('fetch_summary.json'))['end_date'])")
            SKIPPED=$(python3 -c "import json; print(json.load(open('fetch_summary.json')).get('skipped', False))")
            
            echo "end-date=$END_DATE" >> $GITHUB_OUTPUT
            echo "skipped=$SKIPPED" >> $GITHUB_OUTPUT
            
            if [ "$SKIPPED" = "True" ]; then
              echo "Distribution for $END_DATE already exists. No action needed."
            else
              echo "Successfully fetched artifacts for $END_DATE"
            fi
          else
            echo "No fetch_summary.json found"
            exit 1
          fi

      - name: Create Pull Request
        if: steps.summary.outputs.skipped != 'True'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Add fee distribution artifacts for ${{ steps.summary.outputs.end-date }}"
          title: "Biweekly Fee Run ending ${{ steps.summary.outputs.end-date }}"
          body: |
            ## Fee Distribution Artifacts
  
            This PR adds the fee distribution artifacts for the period ending **${{ steps.summary.outputs.end-date }}**.

            ### Files Added
            - Combined Transaction Payload
            - V2 distribution files (fees, incentives, bribes, noncore, partner, alliance)
            - V3 distribution files (fees, incentives, bribes, noncore, partner, alliance)
            
            ### Source
            These files were automatically fetched from the [protocol_fee_allocator_v2](https://github.com/BalancerMaxis/protocol_fee_allocator_v2) repository after a fee report was merged.
            ---
            *This PR was automatically generated by the fee distribution sync workflow.*
          branch: gha-fee-distribution-${{ steps.summary.outputs.end-date }}
          delete-branch: true
          labels: "Fee Distribution"
          reviewers: |
            gosuto-inzasheru
            Xeonus
            jalbrekt85